#include "PolarCode.h"
#include "BaseDecoder.h"
#include "ScCreeperDecoder.h"
#include "ScDecoder.h"
#include "ScFanoDecoder.h"
#include "ScFlipFanoDecoder.h"
#include "ScStackDecoder.h"
#include "ScStackOptimizedDecoder.h"
#include <iostream>
#include <stdexcept>
#include <tuple>

int main() {
    std::vector<int> usedBits = {47, 55, 59, 61, 62, 63, 79, 87, 91, 92, 93, 94, 95, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 143, 150, 151, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255};
    std::vector<double> llr{37.562960, -30.175392, 37.514638, -33.725222, -58.352003, -43.164931, 32.633618, 25.894373, -35.456537, -37.477858, 40.299453, -51.928778, -29.915402, 43.132100, 37.325072, 40.204733, -42.343358, 24.345625, -42.554940, -47.435968, 31.241713, -50.343171, 35.227720, 22.087881, -31.375670, -35.348441, -40.179135, -40.311002, -47.138992, -30.888602, 38.808467, 33.609048, -27.912838, 37.989587, -45.268436, 37.372588, 32.415917, -50.018732, 62.593228, -25.192779, 42.750678, -51.244008, -47.740981, -41.578969, 47.078640, -51.913810, 19.161035, 27.038880, -37.016988, 43.500373, 44.039944, 38.834699, -38.357035, -44.258842, -32.289844, 27.820634, 44.069908, -47.591087, -42.995320, 44.944245, 49.293909, 30.003536, -28.724326, -34.095500, -40.607008, -41.746111, -41.946330, 37.288923, -39.793874, -39.541245, 47.388530, -26.342305, -35.823790, -41.875733, -34.408127, -38.361166, 30.789479, 48.490098, 42.746445, 41.209041, 44.608503, -37.661911, -48.420905, 38.548008, -41.306352, -44.758454, 55.045192, 32.167239, 35.672627, -46.368362, 29.497526, 38.280557, 37.548641, 53.685385, -42.227345, 30.481386, -25.658242, -28.956694, -42.053841, 26.528498, 36.023128, -41.394779, -37.530770, -42.335919, 43.966086, -36.494792, -51.186412, 31.521180, -46.628654, -44.542058, 37.132686, 40.111526, -67.093786, -44.087663, -28.887204, -49.540867, 48.351519, 43.133366, 39.740565, 41.631902, -53.998287, 39.243856, -25.653868, -39.120351, -39.629943, 33.433392, 39.724394, 42.078175, 43.813726, 36.665497, -42.114914, 58.100442, -60.199332, 59.940768, -36.980738, -31.055184, -54.884740, 34.722570, -42.487081, 43.780884, 25.061271, 44.218426, 29.151965, 40.592022, 45.834848, 42.925313, -30.316632, -31.001373, 34.178104, 42.299180, 31.553228, 28.177564, -31.728105, 40.000446, 39.508790, 48.149370, 45.318118, -36.867705, -28.817413, -31.683710, -37.855492, 33.825223, 34.172327, 50.662483, -54.416649, 39.781206, 22.568981, 49.127612, 47.707425, 40.010394, -40.633587, -62.237999, 45.198163, 20.390266, 19.255726, 40.714949, -48.483472, 43.680484, 46.055074, -32.328207, -46.181915, -35.980644, 40.900092, 47.388595, -35.204465, -31.969042, -41.180088, 38.683390, -30.986201, 21.005448, 35.486842, 28.635458, -43.421943, 45.801964, 47.385528, -49.077932, -44.213377, -38.774412, -42.610505, -37.300453, -36.422909, 31.682171, -41.581618, -59.070034, -29.755573, -45.626759, -50.767562, 37.728650, -52.778206, 39.813444, 34.985260, 59.478645, 50.182744, -62.332832, 43.947348, 27.494675, -42.281283, 41.470475, 46.687936, -42.442206, -25.901143, 35.698367, 42.929357, -34.054437, -39.238050, -32.120519, -37.109094, -47.013617, -56.147750, -23.376239, 34.592919, 40.924477, -34.962882, -38.983958, 31.907883, -44.183366, 38.882950, 53.228207, -47.699370, 47.018288, -37.239591, 37.908292, -49.453852, -42.541434, 39.224619, 26.857331, -38.281070, 32.645185, 39.157087, -36.992816, 31.908528, -42.578243, 43.131056, 23.579577, 49.266050, 61.685040};
    PolarCode code(8, std::move(usedBits));
    ScCreeperDecoder decoder(&code, 1);
    auto result = decoder.Decode(llr);
    for (auto elem : result)
        std::cout << elem;
    std::cout << "\n";
    return 0;
}
