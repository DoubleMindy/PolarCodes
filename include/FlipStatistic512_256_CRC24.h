#pragma once

#include <vector>
#include <tuple>

// for (512, 256) code!!!!
class FlipStatistic3 {
private:
	static const std::vector<int> _singles;
	static const std::vector<std::tuple<int, int>> _pairs;

public:
	static std::vector<int> GetSingles() {
		return _singles;
	}

	static std::vector<std::tuple<int, int>> GetPairs() {
		return _pairs;
	}

};

const std::vector<int> FlipStatistic3::_singles = { 448, 295, 299, 394, 396, 393, 312, 301, 401, 286, 354, 124, 402, 205, 206, 353, 203, 390, 186, 182, 211, 356, 185, 285, 344, 340, 302, 283, 404, 188, 213, 360, 240, 307, 122, 417, 214, 232, 181, 327, 408, 338, 418, 449, 368, 174, 309, 123, 313, 420, 159, 310, 217, 331, 119, 450, 391, 175, 218, 424, 339, 314, 227, 125, 220, 432, 233, 395, 287, 452, 341, 333, 230, 334, 316, 229, 126, 183, 355, 234, 342, 456, 397, 241, 236, 242, 345, 464, 207, 357, 244, 187, 348, 403, 398, 346, 405, 480, 189, 215, 248 };
const std::vector<std::tuple<int, int>> FlipStatistic3::_pairs = {
{394, 393},
{205, 206},
{396, 393},
{295, 299},
{394, 396},
{448, 394},
{295, 301},
{299, 301},
{394, 390},
{394, 402},
//{299, 286},
//{354, 353},
//{205, 203},
//{295, 286},
//{299, 312},
//{448, 396},
//{401, 402},
//{206, 203},
//{393, 390},
//{394, 401},
//{393, 401},
//{312, 301},
//{186, 182},
//{448, 393},
//{448, 401},
//{448, 390},
//{295, 312},
//{295, 205},
//{299, 206},
//{396, 206},
//{393, 353},
//{401, 390},
//{448, 402},
//{295, 396},
//{299, 394},
//{299, 354},
//{393, 312},
//{301, 124},
//{301, 353},
//{353, 390},
//{203, 186},
//{448, 295},
//{448, 299},
//{295, 393},
//{295, 402},
//{295, 206},
//{394, 354},
//{396, 402},
//{393, 301},
//{312, 206},
//{354, 390},
//{124, 186},
//{402, 390},
//{205, 182},
//{206, 182},
//{448, 205},
//{448, 206},
//{448, 182},
//{295, 394},
//{295, 354},
//{295, 124},
//{295, 203},
//{295, 390},
//{295, 186},
//{299, 402},
//{299, 390},
//{394, 312},
//{394, 301},
//{394, 205},
//{394, 353},
//{394, 182},
//{396, 301},
//{396, 401},
//{396, 286},
//{396, 390},
//{393, 286},
//{393, 354},
//{393, 402},
//{393, 186},
//{312, 401},
//{312, 286},
//{312, 124},
//{312, 353},
//{301, 286},
//{301, 354},
//{301, 402},
//{301, 205},
//{401, 286},
//{401, 354},
//{401, 205},
//{354, 124},
//{354, 402},
//{124, 182},
//{402, 186},
//{203, 182},
//{448, 286},
//{448, 354},
//{448, 203},
//{295, 401},
//{299, 396},
//{299, 401},
//{299, 124},
//{299, 203},
//{299, 186},
//{394, 286},
//{394, 203},
//{394, 186},
//{396, 312},
//{396, 354},
//{396, 124},
//{393, 182},
//{312, 354},
//{312, 205},
//{312, 182},
//{301, 206},
//{401, 206},
//{401, 353},
//{286, 354},
//{286, 402},
//{286, 205},
//{286, 206},
//{286, 203},
//{124, 353},
//{402, 353},
//{402, 182},
//{205, 186},
//{206, 186},
//{353, 203},
//{353, 186},
//{448, 312},
//{448, 124},
//{448, 353},
//{448, 186},
//{295, 182},
//{299, 393},
//{299, 182},
//{394, 206},
//{396, 353},
//{396, 203},
//{396, 186},
//{393, 205},
//{393, 206},
//{393, 203},
//{312, 402},
//{312, 203},
//{312, 390},
//{312, 186},
//{301, 401},
//{301, 203},
//{301, 390},
//{401, 203},
//{401, 186},
//{286, 124},
//{286, 353},
//{286, 390},
//{354, 206},
//{354, 186},
//{354, 182},
//{124, 205},
//{124, 203},
//{124, 390},
//{402, 205},
//{402, 203},
//{205, 390},
//{206, 353},
//{206, 390},
//{390, 186},
//{390, 182}
};
